import streamlit as st
from PIL import Image
import numpy as np
import cv2
from deepface import DeepFace

st.set_page_config(page_title="Face Analyzer", layout="centered")

st.title("üîç AI Face Analyzer (Age, Gender, Emotion)")
st.write("‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶õ‡¶¨‡¶ø‡¶§‡ßá ‡¶Æ‡ßÅ‡¶ñ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá ‡¶¨‡ßü‡¶∏, ‡¶≤‡¶ø‡¶ô‡ßç‡¶ó, ‡¶Ü‡¶¨‡ßá‡¶ó ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§")

uploaded_file = st.file_uploader("üì§ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßã", type=["jpg", "png", "jpeg"])

if uploaded_file:
    img = Image.open(uploaded_file)
    st.image(img, caption="‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶õ‡¶¨‡¶ø", use_column_width=True)

    # Convert image to OpenCV format
    img_array = np.array(img.convert("RGB"))
    img_bgr = cv2.cvtColor(img_array, cv2.COLOR_RGB2BGR)

    # Analyze using DeepFace
    with st.spinner("Face ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶π‡¶ö‡ßç‡¶õ‡ßá..."):
        try:
            results = DeepFace.analyze(img_bgr, actions=["age", "gender", "emotion"], enforce_detection=False)
            result = results[0]

            st.subheader("üìä ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤:")
            st.markdown(f"""
            - üë§ **Age**: {result['age']}  
            - üöª **Gender**: {result['gender']}  
            - üòä **Emotion**: {result['dominant_emotion']}
            """)
        except Exception as e:
            st.error(f"‚ùå ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")
